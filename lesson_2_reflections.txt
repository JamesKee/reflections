git init - initializes the repository, which sets up git in the directory,
but doesn't add any commits or chose which files will be tracked.

the three parts of git are: 
1. the working directory
2. the stage
3. the repository

the stage is an intermediate area to give a buffer between the working directory and
the repository.  Files can be individually added to the stage and them committed to 
keep commits from getting to large.   

git branch - lists the branches, switch branches using git checkout
git branch <name> -creates a new branch

branches are useful for implementing new features without changing the master.

git checkout -b <new branch name> makes a new branch that is available for commits,
this is great if you are trying to commit from an earlier point in a branch (a detached head state)
and would otherwise be creating a commit that would be unreachable.

git merge <branch_name> - merges a branch with the currently checked out branch all commits
become attached to the merged branch and are ordered by date.

git show <commit ID> - compares (via diff) the target commit to it's parent.

MERGING:  git won't merge if there are confits in the code.  
These conflicts are indicated by <<<<<<<<HEAD  =========== >>>>>>>>>master 
to indicate the three parts of the conflict.  Editing and removing the "git comments" will
allow you to commit and complete the merge.  

NB:to cancel a merge use git merge --abort.